using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Globalization;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace QLDSV_HTC
{
    public partial class frmDongHocPhi : Form
    {
        public frmDongHocPhi()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
    
        }
        int vitri = 0;
        string ghiNhanMaSV = "";
        private void frmDongHocPhi_Load(object sender, EventArgs e)
        {
            // TODO: This line of code loads data into the 'DS.SINHVIEN' table. You can move, or remove it, as needed.
            DS.EnforceConstraints = false;
            this.nIENKHOAVAHOCKYTableAdapter.Connection.ConnectionString = Program.connstr;
            this.nIENKHOAVAHOCKYTableAdapter.Fill(this.DS.NIENKHOAVAHOCKY);

            loadTableCTDHP(vitri);
            deNgayDong.Text = DateTime.UtcNow.ToString("dd/MM/yyyy");
        }

        private void loadTableCTDHP(int vitri)
        {
            DataRowView items = (DataRowView)this.bdsNKHK.List[vitri];
            String nienKhoa = items["NIENKHOA"].ToString();
            int hocKy = int.Parse(items["HOCKY"].ToString());

            if (nienKhoa == "" || items["HOCKY"].ToString() == "")
            {
                MessageBox.Show("Niên khóa và học kỳ không để trống!", "", MessageBoxButtons.OK);
                return;
            }

            cmbNienKhoa.Text = nienKhoa;
            cmbHocKy.Text = hocKy + "";

            this.CTDHPByNKHKTableAdapter.Connection.ConnectionString = Program.connstr;
            this.CTDHPByNKHKTableAdapter.Fill(this.DS.GET_CHI_TIET_DONG_HOC_PHI_BY_NK_HK, nienKhoa, hocKy);
        }

        private void gcNKHK_MouseEnter(object sender, EventArgs e)
        {
            if (vitri == bdsNKHK.Position)
            {
                return;
            }

            vitri = bdsNKHK.Position;
            loadTableCTDHP(vitri);
        }

        private void btnDHP_Click(object sender, EventArgs e)
        {
            string ngayDong = deNgayDong.DateTime.ToString("yyyy-MM-dd");
            string soTienDong = txtSoTienDong.Text.ToString().Replace(",", "");
            string nienKhoa = cmbNienKhoa.Text;
            string hocKy = cmbHocKy.Text;
            string maSV = txtMaSVDHP.Text;
            string hocPhi = txtHocPhi.Text.ToString().Replace(",", "");

            Console.WriteLine(ngayDong);
            Console.WriteLine(soTienDong);
            Console.WriteLine(nienKhoa);
            Console.WriteLine(hocKy);
            Console.WriteLine(maSV);
            Console.WriteLine(hocPhi);

            try
            {
                DataRowView items = (DataRowView)this.bdsTTDHPSV.List[0];
                float sotienCanDong = float.Parse(items["SOTIENCANDONG"].ToString());
                if (sotienCanDong == 0)
                {
                    MessageBox.Show("Sinh viên này đã đóng đủ học phí rồi! Yay!");
                    return;
                }
                if (soTienDong == "")
                {
                    MessageBox.Show("Vui lòng nhập số tiền đóng");
                    return;
                }

                if(int.Parse(soTienDong) < 0)
                {
                    MessageBox.Show("Số tiền đóng không hợp lệ");
                    return;
                }

                if (int.Parse(soTienDong) > sotienCanDong)
                {
                    MessageBox.Show("Không thể đóng nhiều hơn số tiền cần đóng!");
                    return;
                }

                int result = Program.ExecSqlNonQuery("EXEC [dbo].[SP_DONG_HOC_PHI] @MASV = N'" + maSV + "', @NIENKHOA = N'" + nienKhoa + "', @HOCKY =" + int.Parse(hocKy) + ", @NGAYDONG = N'" + ngayDong + "', @SOTIENDONG = " + int.Parse(soTienDong));
                if (result == 0)
                {
                    MessageBox.Show("Đóng học phí thành công");

                    try
                    {
                        loadTableCTDHP(vitri);
                    }
                    catch (Exception ex)
                    {
                        MessageBox.Show("Lỗi Reload: " + ex.Message, "", MessageBoxButtons.OK);
                        return;
                    }
                }
            }
            catch (Exception ex)
            {

            }

        }

        private void loadThongTinDongHocPhiCuaSinhVien(string maSV)
        {
            DataRowView items = (DataRowView)this.bdsNKHK.List[vitri];
            String nienKhoa = items["NIENKHOA"].ToString();
            int hocKy = int.Parse(items["HOCKY"].ToString());
            Console.WriteLine(maSV);
            if (maSV == "")
            {
                MessageBox.Show("Ma Sinh Vien Khong Duoc Thieu!", "", MessageBoxButtons.OK);
                return;
            }
            if(nienKhoa == "" || items["HOCKY"].ToString() == "")
            {
                MessageBox.Show("Niên khóa và học kỳ không để trống!", "", MessageBoxButtons.OK);
                return;
            } 

            this.gET_THONG_TIN_DONG_HOC_PHI_SVTableAdapter.Connection.ConnectionString = Program.connstr;
            this.gET_THONG_TIN_DONG_HOC_PHI_SVTableAdapter.Fill(this.DS.GET_THONG_TIN_DONG_HOC_PHI_SV, nienKhoa, hocKy, maSV);
        }

        private void btnTimKiem_Click(object sender, EventArgs e)
        {
            loadThongTinDongHocPhiCuaSinhVien(txtMASV.Text.Trim());
        }

        private void gcCTDHPByNKHK_Click(object sender, EventArgs e)
        {
            DataRowView items = (DataRowView)this.bdsCTDHPByNKHK.List[bdsCTDHPByNKHK.Position];
            String maSV = items["MASV"].ToString();
            if (ghiNhanMaSV == maSV)
            {
                return;
            }

            ghiNhanMaSV = maSV;
            loadThongTinDongHocPhiCuaSinhVien(maSV);
        }

        private void gcCTDHPByNKHK_MouseEnter(object sender, EventArgs e)
        {
            DataRowView items = (DataRowView)this.bdsCTDHPByNKHK.List[bdsCTDHPByNKHK.Position];
            String maSV = items["MASV"].ToString();
            if (ghiNhanMaSV == maSV)
            {
                return;
            }

            ghiNhanMaSV = maSV;
            loadThongTinDongHocPhiCuaSinhVien(maSV);
        }
    }
}
